import * as React from 'react';
import { Toolbar } from 'react-md';
import Search from './Search';
import Nav from './Nav';
import Action  from './Action';
import BusMap, { BusType, StopType } from './BusMap';

export interface ToolbarSearchState {
    busses: BusType[];
    allStops: Map<number, StopType>;
    activeStops: StopType[];
    searching: boolean;
    search: string;
}

export interface ToolbarSearchProps {
    busses: BusType[];
    allStops: Map<number, StopType>;
    activeStops: StopType[];
    searching: boolean;
    search: string;
}

export default class ToolbarSearch extends React.Component<ToolbarSearchProps, ToolbarSearchState> {
    state = {searching: false, search: '', results: null};
    startSearching = () => {
        this.setState({searching: true});
    }

    stopSearching = () => {
        this.setState({ searching: false});
    }

    clearSearch = () => {
        this.setState({ search: ''});
    }

    handleChange = (value: string) => {
        this.setState({search: value});
    }

    handleKeyDown = (e: KeyboardEvent) => {
        if (e.key === 'Enter') {
            e.preventDefault();
            this.clearSearch(this.state.search);
        }
    }

    handleAutocomplete = (value: string) {
        if (this.state.search === value) {
            return;
        }
        this.search(value);
    }

     search = (value: string) => {
         /* const now = Date.now();
         const results = [...new Array(randomInt({min: 2, max: 5}))].map((_, i) => BusMap index={i} value={value} key={`${now}-${i}`} />);

         this.setState({search: value, results }); */
    }

    render() {
        const { searching, search, results } = this.state;

        return(
            <Toolbar
                fixed={true}
                inset={true}
                nav={<Nav searching={searching} onClick={this.stopSearching} />}
                actions={<Action searching={searching} onClick={this.clearSearch} />}
                title={
                    <Search
                        value={search}
                        onFocus={this.startSearching}
                        onChange={this.handleChange}
                        onKeyDown={this.handleKeyDown}
                        onAutocomplete={this.handleAutocomplete}
                    />
                }
                zDepth={1}
            />
        );
    }
}